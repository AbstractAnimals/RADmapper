'''
Created on 15 Apr 2010

@author: tcezard
'''
from utils.Binning import load_distribution
import os, sys, logging
from optparse import OptionParser
import utils
from utils import utils_logging, utils_param


def main():
    #initialize the logging
    utils_logging.init_logging()
    #Setup options
    optparser=_prepare_optparser()
    (options,dummy) = optparser.parse_args()
    
    dist=load_distribution(sys.stdin)
    if options.xlim and len(options.xlim.split(','))==2:
        inf,sup=options.xlim.split(',')
        inf=float(inf)
        sup=float(sup)
        xlim=[inf,sup]
    else:
        xlim=None
    dist.plot(output_file=options.output_file, xlabel=options.xlabel,
                  ylabel=options.ylabel, title=options.title, xlimit=xlim)
    
def _prepare_optparser():
    """Prepare optparser object. New options will be added in this
    function first.
    """
    usage = """usage: %prog <-i input> <-o outputPath> [-q quality -f]"""
    description = """This script will run (or print) GATK realigner on the indels locations."""
    
    prog_version=utils.getWtss_version()
    optparser = OptionParser(version="%prog of wtss_pipeline v"+prog_version,description=description,usage=usage,add_help_option=False)
    optparser.add_option("-h","--help",action="help",help="show this help message and exit.")
    optparser.add_option("-o","--output_file",dest="output_file",type="string",
                         help="Path to an output file where the image will be printed. Default: %default")
    optparser.add_option("-t","--title",dest="title",type="string",
                         help="title of the graph: %default")
    optparser.add_option("--xlabel",dest="xlabel",type="string",
                         help="the label of x axis: %default")
    optparser.add_option("--ylabel",dest="ylabel",type="string",
                         help="the label of y axis: %default")
    optparser.add_option("--xlim",dest="xlim",type="string",
                         help="the limits of x axis, two number comma separated: %default")
    optparser.add_option("--ylim",dest="ylim",type="string",
                         help="the limits of y axis, two number comma separated: %default")
    return optparser


if __name__=="__main__":
    main()
    
        
